//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//  Authors: DCSO CyTec
//  Version: 0.1
//  OLE Source: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oleds/3c695db0-943f-48a0-b134-939af3b3a4ca
//  MTEF_v3 Source: http://rtf2latex2e.sourceforge.net/MTEF3.html
//------------------------------------------------

// This file only parses PARTS of the embedded object related to CVE-2017-11882 and to validate the record_tag id.
// OLE header for EMBEDDED OBJECTS are parsed (type 0x2)
// MTEF record type is 8 == FONT
// Name field contains shellcode

// sampel rtf file = 4e3c4ea383e6ed5c00672e08adabe24fc142cd05c86830a79c15c90412a2f588.sample
// sample obj file = 6ef048de06e9c2e6b420e78a489e52123766b08549a074a5f95b98ffe8558f38 -> obj80
// extracted with obj with
// "$ rtfdump.py 4e3c4ea383e6ed5c00672e08adabe24fc142cd05c86830a79c15c90412a2f588.sample -s 80 -H -d > obj80"


// -- Equation Editor Tags --
// http://rtf2latex2e.sourceforge.net/MTEF3.html
//
//  0 	END 	end of MTEF, pile, line, embellishment list, or template
//  1 	LINE 	line (slot) record
//  2 	CHAR 	character record
//  3 	TMPL 	template record
//  4 	PILE 	pile (vertical stack of lines) record
//  5 	MATRIX  matrix record
//  6 	EMBELL 	character embellishment (e.g. hat, prime) record
//  7 	RULER 	ruler (tab-stop location) record
//  8 	FONT 	font name record
//  9 	SIZE 	general size record
// 10 	FULL  	full size record
// 11 	SUB 	subscript size record
// 12 	SUB2  	sub-subscript size record
// 13 	SYM 	symbol size record
// 14 	SUBSYM 	sub-symbol size record



typedef struct {
    long  length;
    char  AnsiString[ length ];
} length_prefixed_ansi_string;

typedef struct {
    long  OLEVersion;
    long  FormatID;
    length_prefixed_ansi_string  class_name;
    length_prefixed_ansi_string  topic_name;
    length_prefixed_ansi_string  item_name;
} ole_header;

typedef struct{
    byte record_type:4;
    byte option_flags:4;
    byte tface;
    byte style;
    string name___shellcode__retn_addr<fgcolor=cRed>;    
}mtef_record_font;

typedef struct{
    byte mtef_version;
    byte platform_id;
    byte product_id;
    byte product_version;
    byte product_subversion;
    byte unknown_a;
    byte unknown_b;
}mtef_header;

struct FILE {
    struct EMBEDDED_OBJECT {
        ole_header header_ole<fgcolor=cPurple>;
        long native_data_size;
        //byte native_data[ native_data_size];
            mtef_header header_mtef<fgcolor=cYellow>;    
            mtef_record_font record_mtef_first<fgcolor=cGreen>;
    }embedded_object;
}file;